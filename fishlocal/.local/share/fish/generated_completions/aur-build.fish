# aur-build
# Autogenerated from man page /usr/share/man/man1/aur-build.1.gz
complete -c aur-build -s a -l arg-file -d 'A text file describing directories containing a PKGBUILD relative to the curr…'
complete -c aur-build -s c -l chroot -d 'Build packages inside a  systemd-nspawn (1) container with  aur-chroot '
complete -c aur-build -s d -l database -d 'The name of the  pacman (8) database'
complete -c aur-build -l root -d 'The root directory for the repository'
complete -c aur-build -s f -l force -d 'Continue the build process if a package with the same name is found'
complete -c aur-build -s S -l sign -l gpg-sign -d 'Sign built packages and the database . RB ( "repo-add -s" ) with  gpg (1)'
complete -c aur-build -l pkgver -d 'Run  "makepkg -od" before checking existing packages, effectively running the…'
complete -c aur-build -l makepkg-conf -d 'The  makepkg. conf (5) file used for  makepkg (8) operations'
complete -c aur-build -l makepkg-gnupghome -d 'The  gpg (1) home directory used with  makepkg (8) or  aur-chroot (1)'
complete -c aur-build -l pacman-conf -d 'The file used for retrieving local repositories '
complete -c aur-build -l cargs -l makechrootpkg-args -d 'Arguments (comma-separated) to be passed to  makechrootpkg for chroot builds '
complete -c aur-build -l no-sync -d 'Do not sync the local repository after building'
complete -c aur-build -l results -d 'Write colon-delimited output in the following form to R FILE :'
complete -c aur-build -l nocheck -d 'Do not run the check() function in the PKGBUILD'
complete -c aur-build -s n -l noconfirm -l no-confirm -d 'Do not wait for user input. RB ( makepkg " " --noconfirm ) '
complete -c aur-build -s r -l rmdeps -d 'Remove dependencies installed by makepkg. RB ( makepkg " " --rmdeps ) '
complete -c aur-build -s s -l syncdeps -d 'Install missing dependencies using  pacman . RB ( makepkg " " --syncdeps ) '
complete -c aur-build -s A -l ignorearch -d 'Ignore a missing or incomplete  arch field in the build script'
complete -c aur-build -s L -l log -d 'Enable logging to a text file in the build directory'
complete -c aur-build -s C -l clean -d 'Clean up leftover work files and directories after a successful build'
complete -c aur-build -l cleanbuild -d 'Remove the source directory before building the package'
complete -c aur-build -l buildscript -d 'Read the package script  NAME instead of the  PKGBUILD default'
complete -c aur-build -s v -l verify -d 'Verify the PGP signature of the database before updating'
complete -c aur-build -s R -l remove -d 'Remove old package files from disk when updating their entry in the database'
complete -c aur-build -l new -d 'Only add packages that are not already in the database'
complete -c aur-build -l bind -d or
complete -c aur-build -l temp -d 'will append these options to aur-chroot '
complete -c aur-build -l noextract -d 'option is added to the default makepkg (8) options.  The'
complete -c aur-build -l margs -d '(comma-separated)'
complete -c aur-build -l prevent-downgrade -d 'Do not add packages to the database if a newer version is already present'
complete -c aur-build -s o
complete -c aur-build -l batch
complete -c aur-build -l detach-sign -d and
complete -c aur-build -l no-armor -d 'must be supported by this command'
complete -c aur-build -l nosync -d or
complete -c aur-build -l auto-key-retrieve -d 'in gpg (1) for details'

