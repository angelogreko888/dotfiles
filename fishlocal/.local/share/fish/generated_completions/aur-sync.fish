# aur-sync
# Autogenerated from man page /usr/share/man/man1/aur-sync.1.gz
complete -c aur-sync -l continue -d 'Do not download package files'
complete -c aur-sync -l ignore -d 'Ignore a package upgrade'
complete -c aur-sync -l ignore-file -d 'Ignore package upgrades listed in R FILE '
complete -c aur-sync -s k -l keep-going -d 'Keep going until  NUM packages fail to build . RB ( "ninja -k" )'
complete -c aur-sync -l noview -l no-view -d 'Do not present build files for inspection'
complete -c aur-sync -s u -l upgrades -d 'Update all obsolete AUR packages in a local repository'
complete -c aur-sync -l optdepends -d 'Take  optdepends into account when resolving dependencies'
complete -c aur-sync -l nocheck -l no-check -d 'Do not handle  checkdepends '
complete -c aur-sync -l nograph -l no-graph -d 'Do not verify the AUR dependency graph with  aur-graph (1)'
complete -c aur-sync -l nover -l no-ver -d 'Disable version checking for packages'
complete -c aur-sync -l nover-argv -l no-ver-argv -d 'Disable version checking for packages specified on the command line or upgrad…'
complete -c aur-sync -l noprovides -l no-provides -d 'Do not take virtual dependencies '
complete -c aur-sync -l provides-from -d 'Only take specified (comma-separated)  pacman (8) repositories into account w…'
complete -c aur-sync -s d -l database -d 'Use the  NAME repository'
complete -c aur-sync -l root -d 'The location of the repository root'
complete -c aur-sync -l ff -d 'Merge new AUR commits with  "git-merge --ff" for all repositories'
complete -c aur-sync -l rebase -d 'Merge new AUR commits with  "git-rebase" for all repositories'
complete -c aur-sync -l reset -d 'Discard local changes and commits with  "git-reset" for all repositories'
complete -c aur-sync -s c -l chroot -d 'Build packages in a systemd-nspawn container. RB ( "aur build -c" ) '
complete -c aur-sync -s f -l force -d 'Continue the build process if a package with the same name exists'
complete -c aur-sync -s n -l noconfirm -l no-confirm -d 'Do not wait for user input when installing or removing build dependencies'
complete -c aur-sync -s o -l nobuild -l no-build -d 'Print target packages and their paths instead of building them'
complete -c aur-sync -s K -l autokeyretrieve -l auto-key-retrieve -d 'Automatically import PGP keys to  AUR_SYNC_GNUPGHOME , based on the  validpgp…'
complete -c aur-sync -s C -l clean -d 'Clean up leftover work files and directoreis after a successful build'
complete -c aur-sync -l cleanbuild -d 'Remove the source directory before building the package'
complete -c aur-sync -l pkgver -d 'Run  "makepkg -od --noprepare" before the build process'
complete -c aur-sync -s r -l rmdeps -l rm-deps -d 'Remove dependencies installed by makepkg. RB ( "aur build -r" ) '
complete -c aur-sync -s S -l sign -l gpg-sign -d 'Sign built packages with  gpg (1). RB ( "aur build -S" ) '
complete -c aur-sync -l makepkg-conf -d 'The  makepkg. conf (5) file for chroot and  makepkg (8) operations'
complete -c aur-sync -l pacman-conf -d 'The  pacman. conf (5) file for chroot and local repository operations'
complete -c aur-sync -l format -d 'If  TYPE is  diff or  log , generate diffs with  git-diff (1) or  git-log (1)…'
complete -c aur-sync -l exclude -d 'Do not include  FILE in the diff output.  Can be specified multiple times'
complete -c aur-sync -l prefix -d 'Prepend package names in the diff output instead of a/ and b/ '

